title:
3sum close

Given an array nums of n integers and an integer target, find three integers in nums such that the sum is closest to target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

Example:

Given array nums = [-1, 2, 1, -4], and target = 1.

The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).


class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
    //思路类似3sum求和，加个取距离最小值即可。
        if(nums.size()<3) 
            return {};
        sort(nums.begin(),nums.end());
        int res= nums[0]+nums[1]+nums[2];
        for(int i=0;i<nums.size()-2;i++)
        {
            int start=i+1,end=nums.size()-1;
            int sum;
            while(start<end)
            {
                sum=nums[i]+nums[start]+nums[end];
                if(abs(sum-target)<abs(res-target))
                    res=sum;
                if(sum>target)
                    end--;
                else if(sum<target)
                    start++;
                else
                    return res;
            }
        }
        return res;
    }
};
