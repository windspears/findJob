title:
Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent.

A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.
Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent.

A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.

Solution:
class Solution {
public:
    vector<string> letterCombinations(string digits) {
        if(digits.size()<1) return {};
        vector<string> words={"0","1","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
        vector<string> res;
        res.push_back("");
        for(int i=0;i<digits.size();i++)
        {
            vector<string> temp;
            string s1= words[digits[i]-'0'];
            for(int j =0;j<s1.size();j++)
                for(int n=0;n<res.size();n++)
                {
                    temp.push_back(res[n]+s1[j]);
                }
            res = temp;
        }
        return res;
    }
};
