title:
6-zigzag-conversion


The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)

P   A   H   N
A P L S I I G
Y   I   R
And then read line by line: "PAHNAPLSIIGYIR"

Write the code that will take a string and make this conversion given a number of rows:

string convert(string s, int numRows);
Example 1:

Input: s = "PAYPALISHIRING", numRows = 3
Output: "PAHNAPLSIIGYIR"
Example 2:

Input: s = "PAYPALISHIRING", numRows = 4
Output: "PINALSIGYAHRPI"
Explanation:

P     I    N
A   L S  I G
Y A   H R
P     I


solution:

class Solution {
public:
    string convert(string s, int numRows) {
    /*
    //对字符串内每个字符的下标进行取余操作，每次取出一段字符串即可
    //以4为例，取余分别为0、（1,3），2，这里的取余是按照距离被除数距离排列，因为数字是zigzag形式（首尾相连）
        int N= 2*numRows-2;
        string s1="";
        if(s.size()<0)
            return "";
        if(N==0)
            return s;
        else
        {
            for(int i=0;i<N;i++)
            {
                string s2="";
                for(int j=0;j<s.size();j++)
             {
                    if((abs(N-j%N)==i) | (j%N==i))
                    {
                        if(s[j] != '#')
                        {
                            char c1=s[j];
                            s[j] = '#';
                            s2=s2+c1;
                        }
                    }
              }   
            s1.append(s2);
            }
        return s1;
        }*/
        if(s.size()<0)
            return "";
        if(numRows == 1)
            return s;
        vector<string>v(numRows,"");
        int d=1;
        int row=0;
        for(auto c : s)
        {
            v[row].push_back(c);
            row += d;
            if(row == numRows-1) d= -1;
            if(row == 0) d = 1;
        }
        string res;
        for(auto x: v) res.append(x);
        return res;
    }
};
