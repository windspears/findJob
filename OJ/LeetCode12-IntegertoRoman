Title:IntegertoRoman
Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.

Symbol       Value
I             1
V             5
X             10
L             50
C             100
D             500
M             1000
For example, two is written as II in Roman numeral, just two one's added together. Twelve is written as, XII, which is simply X + II. The number twenty seven is written as XXVII, which is XX + V + II.

Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:

I can be placed before V (5) and X (10) to make 4 and 9. 
X can be placed before L (50) and C (100) to make 40 and 90. 
C can be placed before D (500) and M (1000) to make 400 and 900.
Given an integer, convert it to a roman numeral. Input is guaranteed to be within the range from 1 to 3999.

Example 1:

Input: 3
Output: "III"
Example 2:

Input: 4
Output: "IV"
Example 3:

Input: 9
Output: "IX"
Example 4:

Input: 58
Output: "LVIII"
Explanation: C = 100, L = 50, XXX = 30 and III = 3.
Example 5:

Input: 1994
Output: "MCMXCIV"
Explanation: M = 1000, CM = 900, XC = 90 and IV = 4.



class Solution {
public:
    string intToRoman(int num) {
        //如果数字在0~3之间则直接输出次数即可
        //4~9之间，则根据4，5，6~8，9，10几种情况输出
        int flag=0,m;
        char a,b,c;
        string s1="";
        while(num!=0)
        {
            m=num%10;
            num=num/10;
            flag++;
            if(flag==1){a='I';b='V';c='X';}
            if(flag==2){a='X';b='L';c='C';}
            if(flag==3){a='C';b='D';c='M';}
            if(flag==4){a='M';}
            switch(m)
             {
             //因为后面存在逆转字符串，这里存入的顺序有所调整
              case 0:s1;break;
              case 1:s1=s1+a;break;
              case 2:s1=s1+a+a;break;
              case 3:s1=s1+a+a+a;break;
              case 4:s1=s1+b+a;break;
              case 5:s1=s1+b;break;
              case 6:s1=s1+a+b;break;
              case 7:s1=s1+a+a+b;break;
              case 8:s1=s1+a+a+a+b;break;
              case 9:s1=s1+c+a;break;
                }
            }
        reverse(s1.begin(),s1.end());
        return s1;
        }
};
